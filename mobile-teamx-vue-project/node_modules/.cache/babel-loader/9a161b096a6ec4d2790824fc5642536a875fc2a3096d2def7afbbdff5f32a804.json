{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedSingers: [],\n      singers: [{\n        id: 'kim',\n        image: require('../assets/img/kim.jpeg'),\n        alt: 'Kim singer',\n        name: '김광석'\n      }, {\n        id: 'mujin',\n        image: require('../assets/img/mujin.jpeg'),\n        alt: 'Mujin singer',\n        name: '이무진'\n      }, {\n        id: 'yerin',\n        image: require('../assets/img/yerin.jpeg'),\n        alt: 'Yerin singer',\n        name: '백예린'\n      }, {\n        id: 4,\n        image: require('../assets/img/bibi.jpeg'),\n        alt: 'Bibi singer',\n        name: '비비'\n      }]\n    };\n  },\n  computed: {\n    isButtonDisabled() {\n      return this.selectedSingers.length == 2;\n    }\n  },\n  methods: {\n    selectSinger(singer) {\n      // 이미 선택된 가수인지 확인\n      const index = this.selectedSingers.findIndex(item => item.id === singer.id);\n      if (index === -1) {\n        // 선택된 가수 배열에 추가\n        this.selectedSingers.push(singer);\n      } else {\n        // 이미 선택된 가수이면 선택 해제\n        this.selectedSingers.splice(index, 1);\n      }\n    },\n    isSelectedSinger(singer) {\n      return this.selectedSingers.some(selectedSinger => selectedSinger.id === singer.id);\n    },\n    goToPrevPage() {\n      this.$router.push({\n        name: 'selectListen'\n      });\n    },\n    goToNextPage() {\n      // this.$router.push({ name: 'listenMusic', params: { singerId: this.selectedSinger.id, singerName: this.selectedSinger.name,albumId: this.selectedAlbum.id, albumName: this.selectedAlbum.song } });\n      // const sortedSingers = [...this.selectedSingers].sort();\n      // 아래 방법 대신 v-model을 쓰면 위의 코드를 쓸 수 있음.\n      const sortedSingers = [...this.selectedSingers].sort((a, b) => a.id.localeCompare(b.id));\n      console.log(sortedSingers);\n      const selectedSingerIds = sortedSingers.map(singer => singer.id);\n      const selectedSingerNames = sortedSingers.map(singer => singer.name);\n      // 다음 페이지로 데이터를 전달\n      this.$router.push({\n        name: 'listenMusic',\n        params: {\n          singerIds: selectedSingerIds.join(','),\n          // 배열을 문자열로 변환하여 전달\n          singerNames: selectedSingerNames.join(',') // 배열을 문자열로 변환하여 전달\n        }\n      });\n    },\n    goToMain() {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["data","selectedSingers","singers","id","image","require","alt","name","computed","isButtonDisabled","length","methods","selectSinger","singer","index","findIndex","item","push","splice","isSelectedSinger","some","selectedSinger","goToPrevPage","$router","goToNextPage","sortedSingers","sort","a","b","localeCompare","console","log","selectedSingerIds","map","selectedSingerNames","params","singerIds","join","singerNames","goToMain"],"sources":["/Users/kangjisu/Desktop/X_website/mobile-teamx-vue-project/src/components/selectDuetsinger.vue"],"sourcesContent":["<template>\n    <img class=\"logo\" src=\"@/assets/img/logo.png\" @click=\"goToMain\" alt=\"\">\n    <div class=\"container\">\n        <div class=\"title\">원하는 아티스트를 골라주세요</div>\n        <div class=\"img-container\">\n            <div class=\"artist\" v-for=\"singer in singers\" :key=\"singer.id\" @click=\"selectSinger(singer)\" :class=\"{ selected: isSelectedSinger(singer) }\">\n                <img class=\"singerimg\" :src=\"singer.image\">\n\n                <p class=\"artist-name\">{{ singer.name }}</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"btt-container\">\n      <img class=\"back\" src=\"@/assets/img/back.png\" alt=\"\" @click=\"goToPrevPage\">\n      <img class=\"next\" src=\"@/assets/img/next.png\" alt=\"\" @click=\"goToNextPage\" :class=\"{ 'btt_abled': isButtonDisabled }\">\n    </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n        selectedSingers: [],\n        singers: [\n            { id: 'kim', image: require('../assets/img/kim.jpeg'), alt: 'Kim singer', name: '김광석' },\n            { id: 'mujin', image: require('../assets/img/mujin.jpeg'), alt: 'Mujin singer', name: '이무진' },\n            { id: 'yerin', image: require('../assets/img/yerin.jpeg'), alt: 'Yerin singer', name: '백예린'},\n            { id: 4, image: require('../assets/img/bibi.jpeg'), alt: 'Bibi singer', name: '비비'}\n            ]\n        };\n  },\n  computed: {\n    isButtonDisabled() {\n        return this.selectedSingers.length == 2\n    }\n  },\n  methods: {\n    selectSinger(singer) {\n        // 이미 선택된 가수인지 확인\n        const index = this.selectedSingers.findIndex(item => item.id === singer.id);\n        if (index === -1) {\n          // 선택된 가수 배열에 추가\n          this.selectedSingers.push(singer);\n        } else {\n          // 이미 선택된 가수이면 선택 해제\n          this.selectedSingers.splice(index, 1);\n        }\n    },\n    isSelectedSinger(singer) {\n        return this.selectedSingers.some(selectedSinger => selectedSinger.id === singer.id);\n    },\n    goToPrevPage() {\n      this.$router.push({ name: 'selectListen'});\n    },\n    goToNextPage() {\n        // this.$router.push({ name: 'listenMusic', params: { singerId: this.selectedSinger.id, singerName: this.selectedSinger.name,albumId: this.selectedAlbum.id, albumName: this.selectedAlbum.song } });\n        // const sortedSingers = [...this.selectedSingers].sort();\n        // 아래 방법 대신 v-model을 쓰면 위의 코드를 쓸 수 있음.\n        const sortedSingers = [...this.selectedSingers].sort((a, b) => a.id.localeCompare(b.id));\n        console.log(sortedSingers)\n        const selectedSingerIds = sortedSingers.map(singer => singer.id);\n        const selectedSingerNames = sortedSingers.map(singer => singer.name);\n        // 다음 페이지로 데이터를 전달\n        this.$router.push({ \n          name: 'listenMusic', \n          params: { \n            singerIds: selectedSingerIds.join(','), // 배열을 문자열로 변환하여 전달\n            singerNames: selectedSingerNames.join(',') // 배열을 문자열로 변환하여 전달\n          } \n        });\n    },\n    goToMain(){\n      this.$router.push('/')\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logo{\n    width:30px;\n    margin-top:25px;\n    margin-left:25px;\n}\n.title{\n    margin-top:60px;\n    margin-bottom:30px;\n    color:#172BFF;\n}\n.container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100vw;\n    overflow-x: hidden;\n}\n.artist{\n    padding: 8px;\n    border: 1px solid #172BFF;\n    border-radius: 10px;\n    width:110px;\n    margin-right:20px;\n    margin-top:20px;\n}\n.singerimg{\n    width:110px;\n    height:160px;\n    border-radius: 5px;\n    object-fit: cover;\n}\n.img-container{\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n}\n.artist-name{\n    margin-top:10px;\n    margin-bottom:10px;\n    font-size:13px;\n    font-weight: bold;\n}\n.selected{\n    background-color: blue;\n    color:white;\n}\n.btt-container{\n  display: flex;\n  width:100vw;\n  justify-content: space-between;\n  margin-top:60px;\n}\n.next{\n    width:0;\n    height:0;\n\n}\n.next.btt_abled{\n    width:100px;\n    height:auto;\n    margin-right:20px;\n}\n.back{\n  width:100px;\n  margin-left:20px;\n}\n</style>"],"mappings":";AAmBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACHC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,CACL;QAAEC,EAAE,EAAE,KAAK;QAAEC,KAAK,EAAEC,OAAO,CAAC,wBAAwB,CAAC;QAAEC,GAAG,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAM,CAAC,EACvF;QAAEJ,EAAE,EAAE,OAAO;QAAEC,KAAK,EAAEC,OAAO,CAAC,0BAA0B,CAAC;QAAEC,GAAG,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAM,CAAC,EAC7F;QAAEJ,EAAE,EAAE,OAAO;QAAEC,KAAK,EAAEC,OAAO,CAAC,0BAA0B,CAAC;QAAEC,GAAG,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC5F;QAAEJ,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAEC,OAAO,CAAC,yBAAyB,CAAC;QAAEC,GAAG,EAAE,aAAa;QAAEC,IAAI,EAAE;MAAI;IAEtF,CAAC;EACP,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACf,OAAO,IAAI,CAACR,eAAe,CAACS,MAAK,IAAK;IAC1C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,MAAM,EAAE;MACjB;MACA,MAAMC,KAAI,GAAI,IAAI,CAACb,eAAe,CAACc,SAAS,CAACC,IAAG,IAAKA,IAAI,CAACb,EAAC,KAAMU,MAAM,CAACV,EAAE,CAAC;MAC3E,IAAIW,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB;QACA,IAAI,CAACb,eAAe,CAACgB,IAAI,CAACJ,MAAM,CAAC;MACnC,OAAO;QACL;QACA,IAAI,CAACZ,eAAe,CAACiB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACvC;IACJ,CAAC;IACDK,gBAAgBA,CAACN,MAAM,EAAE;MACrB,OAAO,IAAI,CAACZ,eAAe,CAACmB,IAAI,CAACC,cAAa,IAAKA,cAAc,CAAClB,EAAC,KAAMU,MAAM,CAACV,EAAE,CAAC;IACvF,CAAC;IACDmB,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACN,IAAI,CAAC;QAAEV,IAAI,EAAE;MAAc,CAAC,CAAC;IAC5C,CAAC;IACDiB,YAAYA,CAAA,EAAG;MACX;MACA;MACA;MACA,MAAMC,aAAY,GAAI,CAAC,GAAG,IAAI,CAACxB,eAAe,CAAC,CAACyB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACxB,EAAE,CAAC0B,aAAa,CAACD,CAAC,CAACzB,EAAE,CAAC,CAAC;MACxF2B,OAAO,CAACC,GAAG,CAACN,aAAa;MACzB,MAAMO,iBAAgB,GAAIP,aAAa,CAACQ,GAAG,CAACpB,MAAK,IAAKA,MAAM,CAACV,EAAE,CAAC;MAChE,MAAM+B,mBAAkB,GAAIT,aAAa,CAACQ,GAAG,CAACpB,MAAK,IAAKA,MAAM,CAACN,IAAI,CAAC;MACpE;MACA,IAAI,CAACgB,OAAO,CAACN,IAAI,CAAC;QAChBV,IAAI,EAAE,aAAa;QACnB4B,MAAM,EAAE;UACNC,SAAS,EAAEJ,iBAAiB,CAACK,IAAI,CAAC,GAAG,CAAC;UAAE;UACxCC,WAAW,EAAEJ,mBAAmB,CAACG,IAAI,CAAC,GAAG,EAAE;QAC7C;MACF,CAAC,CAAC;IACN,CAAC;IACDE,QAAQA,CAAA,EAAE;MACR,IAAI,CAAChB,OAAO,CAACN,IAAI,CAAC,GAAG;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}